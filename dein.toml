
[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'tomasr/molokai'
hook_add = '''
  set background=dark
'''

[[plugins]]
repo = 'challenger-deep-theme/vim'

[[plugins]]
repo = 'kana/vim-submode'
hook_add = '''
  set background=dark
   call submode#enter_with('window_move', 'n', '', 's>', '<C-w>>')
   call submode#enter_with('window_move', 'n', '', 's<', '<C-w><')
   call submode#enter_with('window_move', 'n', '', 's+', '<C-w>+')
   call submode#enter_with('window_move', 'n', '', 's-', '<C-w>-')
   call submode#map('window_move', 'n', '', '>', '<C-w>>')
   call submode#map('window_move', 'n', '', '<', '<C-w><')
   call submode#map('window_move', 'n', '', '+', '<C-w>+')
   call submode#map('window_move', 'n', '', '-', '<C-w>-')

   call submode#enter_with('bufmove', 'n', '', '<Space>sb', '<Nop>')
   call submode#map('bufmove', 'n', '', 'j', '<C-w>j')
   call submode#map('bufmove', 'n', '', 'k', '<C-w>k')
   call submode#map('bufmove', 'n', '', 'l', '<C-w>l')
   call submode#map('bufmove', 'n', '', 'h', '<C-w>h')

   call submode#enter_with('tabmove', 'n', '', '<Space>st', '<Nop>')
   call submode#map('bufmove', 'n', '', 'n', ':tabnext<CR>')
   call submode#map('bufmove', 'n', '', 'p', ':tabprevious<CR>')
'''

[[plugins]]
repo="honza/vim-snippets"

"repo='w0rp/ale'
"hook_add='''
" nnoremap <silent> [ale]p <Plug>(ale_previous_error)
" nnoremap <silent> [ale]n <Plug>(ale_next_error)
" let g:ale_lint_on_text_changed = 0 
" let g:ale_sign_error ='✖'
" let g:ale_sign_warning = '⚠' 
" let g:ale_fix_on_save = 1
" let g:ale_fixers = {
"     \'java':['google_java_format'],
"     \}
" function! s:execute_path() abort
"	if has('unix')
"	    let s:php_bin_path = expand($HOME . "/.composer/vendor/bin")
"        endif
"	return s:php_bin_path
" endfunction 
" let s:php_linter_path = s:execute_path()
" let g:ale_php_phpmd_executable = s:php_linter_path . "/phpmd"
" let g:ale_php_phpcs_executable = s:php_linter_path . "/phpcs"
" let g:ale_linters = { 
"     \'python':['flake8'],
"     \'php':['phpcs', 'phpmd', 'php'],
"     \}
"'''

[[plugins]]
repo='vim-airline/vim-airline'
hook_add='''
    let g:airline#extensions#tabline#buffer_idx_mode = 1
    let g:airline#extensions#tabline#enabled = 1
'''

[[plugins]]
repo = 'lighttiger2505/gtags.vim'
hook_add = '''
    " Options
    let g:Gtags_Auto_Map = 0
    let g:Gtags_OpenQuickfixWindow = 1
    " Keymap
    " Show definetion of function cousor word on quickfix
    nnoremap <silent> <Space>g] :<C-u>exe("Gtags ".expand('<cword>'))<CR>
    " Show reference of cousor word on quickfix
    nnoremap <silent> <Space>g[ :<C-u>exe("Gtags -r ".expand('<cword>'))<CR>
'''

# git plugin
[[plugins]]
repo = "airblade/vim-gitgutter"

[[plugins]]
repo = "tpope/vim-fugitive"
